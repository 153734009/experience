
" +-----------------------------------------
" | Common
" +-----------------------------------------
" | Frequent functions in my CODE career
" +-----------------------------------------
" | Author: Everyone  you & me(Dale)
" +----------------------------------------

:%!xxd		"转化成16进制显示
:%!xxd -r	"恢复字符显示
:%s/\(\w\+\), \(\w\+\)/\2 \1/   将 Doe, John 修改为 John Doe	"分组后向引用

"1.去除空行中的空格
	:%s/^\s\+$//
"2.去空行
	:g/^$/d
	:g /^\n/d 
"3.去多行空行，留1行
	"替换部分匹配换行的是 \r 不是 \n，和查找不一样
	:%s/\n\{3,\}/\r\r/	"\n 表示换行, \{3,\} 表示三个以上的, 也就是超过两个空行, 替换成两个 \r (换行在替换的时候就是这样, 前面要用 \n, 后面要用 \r)
"4.将所有行尾多余的空格删除
	:%s= *$==
"5.块操作	ctrl+q
"6.夸文件多行复制	
	"a10yy	
	"ap
"7.代码折叠
manual		手工定义折叠
indent		更多的缩进表示更高级别的折叠
expr		用表达式来定义折叠
syntax		用语法高亮来定义折叠
diff		对没有更改的文本进行折叠
marker		对文中的标志折叠

"8.增加一空行，方便阅读
	:s%/\n/\r\r/gc
"9.递增 插入
let i=0 | g/toPlaced/s//\=i/ |let i=i+1
"10. 宏录制（调用 6@a ）
	qa 动作 q 
	qa dw j q	=>	6@a

"11 换行符
	\r => ^M
	:%s/\n\n/\r/g "连续的两个空行替换成一个空行

"12 <list mode>
	:set list	 :set nolist "可以清楚的看到以“$”表示的换行符和以“^I”表示的制表符

"13 编码查看设置问题
	:set fileencoding(等价于fenc)	"查看当前文件编码
	:set fenc=utf-8	:w 				"设置编码 然后:w就把文件存成utf-8
	:set fileencodings(等价于fencs)=utf-8,gb2312,gbk,gb18030,big5	
	:set enc=utf-8
	"是用来在打开文件的时候进行解码的猜测列表。文件编码没有百分百正确的判断方法，所以vim只能猜测文件编码。
	"enc，其作用是显示, 不管最后的文件是什么编码的，vim都会将其转换为当前系统编码来进行处理，这样才能在当前系统里面正确地显示出来。
	"在windows下面，enc默认是cp936，这也就是中文windows的默认编码。
	"在 linux下，随着你的系统locale可能设为zh_CN.gb18030或者zh_CN.utf-8，你的enc要对应的设为gb18030或者 utf-8(或者gbk之类的)。
	"
"14 
:shell 可以在不关闭vi的情况下切换到shell命令行
:exit 从shell回到vi
9. 多标签
直接在编辑的时候输入：
vim -p 要编辑的文件名
如vim -p * 就是编辑当前目录的所有文件
多个标签间进行切换时向右切换gt，向左切换用gT
在编辑的时候想增加一个标签就可以:tabnew filename
:tabc       关闭当前的tab
:tabo       关闭所有其他的tab
:tabs       查看所有打开的tab
:tabp      前一个
:tabn      后一个"
